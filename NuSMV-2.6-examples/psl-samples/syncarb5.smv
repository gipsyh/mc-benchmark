--syncarb.smv:

MODULE arbiter-element(above,below,init-token)

VAR
  Persistent : boolean;
  Token : boolean;
  Request : boolean;

ASSIGN
  init(Token) := init-token;
  next(Token) := token-in;
  init(Persistent) := FALSE;
  next(Persistent) := Request & (Persistent | Token);

DEFINE
  above.token-in := Token;
  override-out := above.override-out | (Persistent & Token);
  grant-out := !Request & below.grant-out;
  ack-out := Request & (Persistent & Token | below.grant-out);

SPEC
  AG ((ack-out -> Request) & AF (!Request | ack-out))

PSLSPEC
  AG ((ack-out -> Request) & AF (!Request | ack-out));

MODULE main

VAR
  e_5 : arbiter-element(self,e_4,FALSE);
  e_4 : arbiter-element(e_5,e_3,FALSE);
  e_3 : arbiter-element(e_4,e_2,FALSE);
  e_2 : arbiter-element(e_3,e_1,FALSE);
  e_1 : arbiter-element(e_2,self,TRUE);

DEFINE
  grant-in := TRUE;
  e_1.token-in := token-in;
  override-out := FALSE;
  grant-out := grant-in & !e_1.override-out;

--SPEC
--  AG (e_5.Request -> ABF 0..4 (!e_5.Request | e_5.ack-out))

--SPEC
--  AG (!e_1.Request & !e_2.Request & !e_3.Request & !e_4.Request & e_5.Request -> e_5.ack-out)

SPEC
  AG (
      !(e_1.ack-out & e_2.ack-out)

      & !(e_1.ack-out & e_3.ack-out)
      & !(e_2.ack-out & e_3.ack-out)

      & !(e_1.ack-out & e_4.ack-out)
      & !(e_2.ack-out & e_4.ack-out)
      & !(e_3.ack-out & e_4.ack-out)

      & !(e_1.ack-out & e_5.ack-out)
      & !(e_2.ack-out & e_5.ack-out)
      & !(e_3.ack-out & e_5.ack-out)
      & !(e_4.ack-out & e_5.ack-out)
     )


PSLSPEC
  AG (
      !(e_1.ack-out & e_2.ack-out)

      & !(e_1.ack-out & e_3.ack-out)
      & !(e_2.ack-out & e_3.ack-out)

      & !(e_1.ack-out & e_4.ack-out)
      & !(e_2.ack-out & e_4.ack-out)
      & !(e_3.ack-out & e_4.ack-out)

      & !(e_1.ack-out & e_5.ack-out)
      & !(e_2.ack-out & e_5.ack-out)
      & !(e_3.ack-out & e_5.ack-out)
      & !(e_4.ack-out & e_5.ack-out)
     );


PSLSPEC
      AG (
                           ! (e_1.ack-out & e_2.ack-out)
--      & (forall i in {1:2}: ! (e[i].ack-out & e_3.ack-out))
      & (! (e_1.ack-out & e_3.ack-out) &
         ! (e_2.ack-out & e_3.ack-out))
--      & (forall i in {1:3}: ! (e[i].ack-out & e_4.ack-out))
      & (! (e_1.ack-out & e_4.ack-out) & 
         ! (e_2.ack-out & e_4.ack-out) & 
         ! (e_3.ack-out & e_4.ack-out))
--      & (forall i in {1:4}: ! (e[i].ack-out & e_5.ack-out))
      & (! (e_1.ack-out & e_5.ack-out) & 
         ! (e_2.ack-out & e_5.ack-out) & 
         ! (e_3.ack-out & e_5.ack-out) & 
         ! (e_4.ack-out & e_5.ack-out))
      ) ;

PSLSPEC
      always (
                           ! (e_1.ack-out & e_2.ack-out)
--      & (forall i in {1:2}: ! (e[i].ack-out & e_3.ack-out))
      & (! (e_1.ack-out & e_3.ack-out) & 
         ! (e_2.ack-out & e_3.ack-out)
        )
--      & (forall i in {1:3}: ! (e[i].ack-out & e_4.ack-out))
      & (! (e_1.ack-out & e_4.ack-out) &
         ! (e_2.ack-out & e_4.ack-out) &
         ! (e_3.ack-out & e_4.ack-out)
         )
--      & (forall i in {1:4}: ! (e[i].ack-out & e_5.ack-out))
      & (! (e_1.ack-out & e_5.ack-out) & 
         ! (e_2.ack-out & e_5.ack-out) & 
         ! (e_3.ack-out & e_5.ack-out) &
         ! (e_4.ack-out & e_5.ack-out)
        )
      ) ;


PSLSPEC
                           never (e_1.ack-out & e_2.ack-out)
--      & (forall i in {1:2}: never (e[i].ack-out & e_3.ack-out))
      & ((never (e_1.ack-out & e_3.ack-out)) & 
         (never (e_2.ack-out & e_3.ack-out))
        )
--      & (forall i in {1:3}: never (e[i].ack-out & e_4.ack-out))
      & ((never (e_1.ack-out & e_4.ack-out)) & 
         (never (e_2.ack-out & e_4.ack-out)) & 
         (never (e_3.ack-out & e_4.ack-out))
        )
--      & (forall i in {1:4}: never (e[i].ack-out & e_5.ack-out));
      & ((never (e_1.ack-out & e_5.ack-out)) & 
         (never (e_2.ack-out & e_5.ack-out)) & 
         (never (e_3.ack-out & e_5.ack-out)) & 
         (never (e_4.ack-out & e_5.ack-out))
        );

PSLSPEC
--      never forall i in {1:2}: (e[i].ack-out & e_3.ack-out);
      never ((e_1.ack-out & e_3.ack-out) & 
             (e_2.ack-out & e_3.ack-out));

PSLSPEC
--      never forall i in {1:3}: (e[i].ack-out & e_4.ack-out);
      never ((e_1.ack-out & e_4.ack-out) & 
             (e_2.ack-out & e_4.ack-out) & 
             (e_3.ack-out & e_4.ack-out));

PSLSPEC
--      never forall i in {1:4}: (e[i].ack-out & e_5.ack-out);
      never ((e_1.ack-out & e_5.ack-out) & 
             (e_2.ack-out & e_5.ack-out) & 
             (e_3.ack-out & e_5.ack-out) &
             (e_4.ack-out & e_5.ack-out));
