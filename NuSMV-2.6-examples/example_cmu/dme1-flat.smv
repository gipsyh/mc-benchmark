-- Flattened Boolean FSM model  generated from dme1.smv
-- Dumped cwd->layers are: model model_bool determ determ_bool __TempLayer_0 

MODULE main
-- Input variables from layer 'model'
-- Input variables from layer 'model_bool'
-- Input variables from layer 'determ'
-- Input variables from layer 'determ_bool'
-- Input variables from layer '__TempLayer_0'
-- State variables from layer 'model'
VAR
e_3.q.out : boolean;
e_3.f.out : boolean;
e_3.d.out : boolean;
e_3.b.out : boolean;
e_3.i.out : boolean;
e_3.h.out : boolean;
e_3.n.out : boolean;
e_3.u.req : boolean;
e_3.a.out : boolean;
e_3.c.out : boolean;
e_3.g.out : boolean;
e_3.e.out : boolean;
e_3.k.out : boolean;
e_3.l.out : boolean;
e_3.p.out : boolean;
e_3.m.out : boolean;
e_3.r.out : boolean;
e_3.j.out : boolean;
e_2.q.out : boolean;
e_2.f.out : boolean;
e_2.d.out : boolean;
e_2.b.out : boolean;
e_2.i.out : boolean;
e_2.h.out : boolean;
e_2.n.out : boolean;
e_2.u.req : boolean;
e_2.a.out : boolean;
e_2.c.out : boolean;
e_2.g.out : boolean;
e_2.e.out : boolean;
e_2.k.out : boolean;
e_2.l.out : boolean;
e_2.p.out : boolean;
e_2.m.out : boolean;
e_2.r.out : boolean;
e_2.j.out : boolean;
e_1.q.out : boolean;
e_1.f.out : boolean;
e_1.d.out : boolean;
e_1.b.out : boolean;
e_1.i.out : boolean;
e_1.h.out : boolean;
e_1.n.out : boolean;
e_1.u.req : boolean;
e_1.a.out : boolean;
e_1.c.out : boolean;
e_1.g.out : boolean;
e_1.e.out : boolean;
e_1.k.out : boolean;
e_1.l.out : boolean;
e_1.p.out : boolean;
e_1.m.out : boolean;
e_1.r.out : boolean;
e_1.j.out : boolean;

-- State variables from layer 'model_bool'
-- State variables from layer 'determ'
-- State variables from layer 'determ_bool'
-- State variables from layer '__TempLayer_0'
-- Frozen variables from layer 'model'
-- Frozen variables from layer 'model_bool'
-- Frozen variables from layer 'determ'
-- Frozen variables from layer 'determ_bool'
-- Frozen variables from layer '__TempLayer_0'
INIT
 !e_3.q.out

INIT
 __expr0

INIT
 !e_3.d.out

INIT
 !e_3.b.out

INIT
 !e_3.i.out

INIT
 __expr1

INIT
 __expr2

INIT
 !e_3.u.req

INIT
 !e_3.a.out

INIT
 !e_3.c.out

INIT
 __expr3

INIT
 __expr4

INIT
 !e_3.k.out

INIT
 !e_3.l.out

INIT
 !e_3.p.out

INIT
 e_3.m.out

INIT
 __expr5

INIT
 __expr6

INIT
 __expr7

INIT
 __expr8

INIT
 !e_2.d.out

INIT
 __expr9

INIT
 !e_2.i.out

INIT
 __expr10

INIT
 e_2.n.out

INIT
 !e_2.u.req

INIT
 !e_2.a.out

INIT
 !e_2.c.out

INIT
 __expr11

INIT
 __expr12

INIT
 !e_2.k.out

INIT
 !e_2.l.out

INIT
 !e_2.p.out

INIT
 __expr13

INIT
 __expr14

INIT
 __expr15

INIT
 __expr16

INIT
 __expr17

INIT
 !e_1.d.out

INIT
 __expr18

INIT
 !e_1.i.out

INIT
 __expr19

INIT
 e_1.n.out

INIT
 !e_1.u.req

INIT
 !e_1.a.out

INIT
 !e_1.c.out

INIT
 __expr20

INIT
 __expr21

INIT
 !e_1.k.out

INIT
 !e_1.l.out

INIT
 __expr22

INIT
 __expr23

INIT
 __expr24

INIT
 __expr25



TRANS
 __expr26

TRANS
 __expr28

TRANS
 __expr29

TRANS
 __expr26

TRANS
 __expr30

TRANS
 __expr32

TRANS
 __expr30

TRANS
 __expr34

TRANS
 __expr35

TRANS
 __expr34

TRANS
 !(next(e_3.b.out) & next(e_3.a.out))

TRANS
 !(next(e_3.a.out) & next(e_3.b.out))

TRANS
 __expr36

TRANS
 __expr36

TRANS
 __expr38

TRANS
 __expr39

TRANS
 __expr38

TRANS
 __expr40

TRANS
 __expr42

TRANS
 __expr40

TRANS
 __expr44

TRANS
 __expr46

TRANS
 __expr44

TRANS
 __expr47

TRANS
 __expr48

TRANS
 __expr47

TRANS
 __expr48

TRANS
 __expr28

TRANS
 __expr35

TRANS
 __expr50

TRANS
 __expr39

TRANS
 __expr52

TRANS
 __expr42

TRANS
 __expr53

TRANS
 __expr52

TRANS
 __expr54

TRANS
 __expr46

TRANS
 __expr32

TRANS
 __expr50

TRANS
 __expr53

TRANS
 __expr55

TRANS
 __expr57

TRANS
 __expr55

TRANS
 __expr58

TRANS
 __expr59

TRANS
 __expr58

TRANS
 __expr61

TRANS
 __expr62

TRANS
 __expr61

TRANS
 !(next(e_2.b.out) & next(e_2.a.out))

TRANS
 !(next(e_2.a.out) & next(e_2.b.out))

TRANS
 __expr54

TRANS
 __expr64

TRANS
 __expr65

TRANS
 __expr64

TRANS
 __expr66

TRANS
 __expr68

TRANS
 __expr66

TRANS
 __expr70

TRANS
 __expr72

TRANS
 __expr70

TRANS
 __expr73

TRANS
 __expr74

TRANS
 __expr73

TRANS
 __expr74

TRANS
 __expr57

TRANS
 __expr62

TRANS
 __expr76

TRANS
 __expr65

TRANS
 __expr78

TRANS
 __expr68

TRANS
 __expr79

TRANS
 __expr78

TRANS
 __expr80

TRANS
 __expr72

TRANS
 __expr59

TRANS
 __expr76

TRANS
 __expr79

TRANS
 __expr81

TRANS
 __expr83

TRANS
 __expr81

TRANS
 __expr84

TRANS
 __expr85

TRANS
 __expr84

TRANS
 __expr87

TRANS
 __expr88

TRANS
 __expr87

TRANS
 !(next(e_1.b.out) & next(e_1.a.out))

TRANS
 !(next(e_1.a.out) & next(e_1.b.out))

TRANS
 __expr80

TRANS
 __expr90

TRANS
 __expr91

TRANS
 __expr90

TRANS
 __expr92

TRANS
 __expr94

TRANS
 __expr92

TRANS
 __expr96

TRANS
 __expr98

TRANS
 __expr96

TRANS
 __expr99

TRANS
 __expr100

TRANS
 __expr99

TRANS
 __expr100

TRANS
 __expr83

TRANS
 __expr88

TRANS
 __expr102

TRANS
 __expr91

TRANS
 __expr104

TRANS
 __expr94

TRANS
 __expr104

TRANS
 __expr98

TRANS
 __expr85

TRANS
 __expr102

TRANS
 __expr29



-- LTLSPEC
--  G ((!(e_1.r.out & e_2.r.out) & !(e_1.r.out & e_3.r.out)) & !(e_2.r.out & e_3.r.out))

LTLSPEC
 G (!(e_2.q.out &  X __expr7) |  X ( G __expr7 | ((__expr7 U e_1.q.out) U e_3.q.out)))

-- LTLSPEC
-- !( G (!(e_2.q.out &  X __expr7) |  X ( G __expr7 | ((__expr7 U e_1.q.out) U e_3.q.out))))

-- LTLSPEC
--  G (__expr14 | !(__expr14 S (e_2.r.out S e_1.p.out)))

-- LTLSPEC
-- !( G (__expr14 | !(__expr14 S (e_2.r.out S e_1.p.out))))

-- LTLSPEC
-- !( G (__expr14 | !(__expr14 S (e_2.r.out S e_1.p.out))) &  G ( F e_2.r.out))

-- Symbols introduced by the dumper:
DEFINE __expr34 := case
e_3.d.out : (next(e_3.d.out) | (!e_3.b.out | e_3.r.out));
TRUE : (!next(e_3.d.out) | __expr33);
esac ;

DEFINE __expr77 := !next(e_2.l.out) ;

DEFINE __expr4 := !e_3.e.out ;

DEFINE __expr85 := case
(e_1.f.out | e_1.n.out) : (e_1.m.out | !next(e_1.m.out));
TRUE : (__expr23 | next(e_1.m.out));
esac ;

DEFINE __expr12 := !e_2.e.out ;

DEFINE __expr83 := case
e_1.q.out : __expr82;
e_1.a.out : (!e_1.c.out | next(e_1.c.out));
TRUE : __expr82;
esac ;

DEFINE __expr91 := case
(e_1.c.out <-> e_1.i.out) : case
e_1.c.out : (__expr21 | next(e_1.e.out));
TRUE : (e_1.e.out | !next(e_1.e.out));
esac;
TRUE : (next(e_1.e.out) <-> e_1.e.out);
esac ;

DEFINE __expr46 := case
e_3.n.out : case
e_3.k.out : (!e_3.p.out | next(e_3.p.out));
TRUE : __expr45;
esac;
TRUE : __expr45;
esac ;

DEFINE __expr42 := case
e_3.h.out : __expr41;
e_3.g.out : (!e_3.k.out | next(e_3.k.out));
TRUE : __expr41;
esac ;

DEFINE __expr76 := case
e_2.e.out : case
e_2.m.out : (__expr14 | next(e_2.r.out));
TRUE : __expr75;
esac;
TRUE : __expr75;
esac ;

DEFINE __expr23 := !e_1.m.out ;

DEFINE __expr48 := case
e_3.u.req : (!e_3.a.out | next(e_3.a.out));
TRUE : (e_3.a.out | !next(e_3.a.out));
esac ;

DEFINE __expr71 := (e_2.p.out | !next(e_2.p.out)) ;

DEFINE __expr93 := (e_1.k.out | !next(e_1.k.out)) ;

DEFINE __expr101 := (e_1.r.out | !next(e_1.r.out)) ;

DEFINE __expr56 := (e_2.c.out | !next(e_2.c.out)) ;

DEFINE __expr54 := case
e_3.p.out : (__expr9 | next(e_2.b.out));
TRUE : (e_2.b.out | !next(e_2.b.out));
esac ;

DEFINE __expr3 := !e_3.g.out ;

DEFINE __expr96 := case
e_1.n.out : (next(e_1.n.out) | (e_1.e.out | e_1.m.out));
TRUE : (!next(e_1.n.out) | __expr95);
esac ;

DEFINE __expr84 := case
(e_1.d.out <-> e_1.i.out) : case
e_1.f.out : (next(e_1.f.out) | !e_1.d.out);
TRUE : (!next(e_1.f.out) | e_1.d.out);
esac;
TRUE : (next(e_1.f.out) <-> e_1.f.out);
esac ;

DEFINE __expr32 := case
(e_3.f.out | e_3.n.out) : (e_3.m.out | !next(e_3.m.out));
TRUE : (__expr31 | next(e_3.m.out));
esac ;

DEFINE __expr104 := case
e_1.k.out : case
e_1.l.out : (next(e_1.l.out) | __expr23);
TRUE : (__expr103 | e_1.m.out);
esac;
TRUE : (e_1.l.out | __expr103);
esac ;

DEFINE __expr64 := case
e_2.i.out : (next(e_2.i.out) | (__expr10 | e_2.j.out));
TRUE : (!next(e_2.i.out) | __expr63);
esac ;

DEFINE __expr22 := !e_1.p.out ;

DEFINE __expr92 := case
(e_1.g.out <-> e_1.j.out) : case
e_1.h.out : (next(e_1.h.out) | __expr20);
TRUE : (!next(e_1.h.out) | e_1.g.out);
esac;
TRUE : (next(e_1.h.out) <-> e_1.h.out);
esac ;

DEFINE __expr55 := case
e_2.q.out : (next(e_2.q.out) | (__expr8 | !e_2.n.out));
TRUE : (!next(e_2.q.out) | (e_2.f.out & e_2.n.out));
esac ;

DEFINE __expr5 := !e_3.r.out ;

DEFINE __expr60 := (e_2.b.out & __expr14) ;

DEFINE __expr47 := case
e_3.u.req : (next(e_3.u.req) | e_3.r.out);
TRUE : (!next(e_3.u.req) | __expr5);
esac ;

DEFINE __expr103 := !next(e_1.l.out) ;

DEFINE __expr31 := !e_3.m.out ;

DEFINE __expr9 := !e_2.b.out ;

DEFINE __expr62 := case
(e_2.d.out | e_2.c.out) : (__expr11 | next(e_2.g.out));
TRUE : (e_2.g.out | !next(e_2.g.out));
esac ;

DEFINE __expr6 := !e_3.j.out ;

DEFINE __expr14 := !e_2.r.out ;

DEFINE __expr53 := case
e_3.l.out : (__expr6 | next(e_3.j.out));
e_3.j.out : (next(e_3.j.out) | __expr7);
TRUE : (!next(e_3.j.out) | e_2.q.out);
esac ;

DEFINE __expr30 := case
(e_3.d.out <-> e_3.i.out) : case
e_3.f.out : (next(e_3.f.out) | !e_3.d.out);
TRUE : (!next(e_3.f.out) | e_3.d.out);
esac;
TRUE : (next(e_3.f.out) <-> e_3.f.out);
esac ;

DEFINE __expr13 := !e_2.m.out ;

DEFINE __expr17 := !e_1.f.out ;

DEFINE __expr15 := !e_2.j.out ;

DEFINE __expr28 := case
e_3.q.out : __expr27;
e_3.a.out : (!e_3.c.out | next(e_3.c.out));
TRUE : __expr27;
esac ;

DEFINE __expr19 := !e_1.h.out ;

DEFINE __expr72 := case
e_2.n.out : case
e_2.k.out : (!e_2.p.out | next(e_2.p.out));
TRUE : __expr71;
esac;
TRUE : __expr71;
esac ;

DEFINE __expr68 := case
e_2.h.out : __expr67;
e_2.g.out : (!e_2.k.out | next(e_2.k.out));
TRUE : __expr67;
esac ;

DEFINE __expr102 := case
e_1.e.out : case
e_1.m.out : (__expr24 | next(e_1.r.out));
TRUE : __expr101;
esac;
TRUE : __expr101;
esac ;

DEFINE __expr95 := (__expr21 & __expr23) ;

DEFINE __expr36 := case
e_3.b.out : (next(e_3.b.out) | __expr22);
TRUE : (!next(e_3.b.out) | e_1.p.out);
esac ;

DEFINE __expr74 := case
e_2.u.req : (!e_2.a.out | next(e_2.a.out));
TRUE : (e_2.a.out | !next(e_2.a.out));
esac ;

DEFINE __expr25 := !e_1.j.out ;

DEFINE __expr18 := !e_1.b.out ;

DEFINE __expr39 := case
(e_3.c.out <-> e_3.i.out) : case
e_3.c.out : (__expr4 | next(e_3.e.out));
TRUE : (e_3.e.out | !next(e_3.e.out));
esac;
TRUE : (next(e_3.e.out) <-> e_3.e.out);
esac ;

DEFINE __expr97 := (e_1.p.out | !next(e_1.p.out)) ;

DEFINE __expr82 := (e_1.c.out | !next(e_1.c.out)) ;

DEFINE __expr61 := case
e_2.d.out : (next(e_2.d.out) | (__expr9 | e_2.r.out));
TRUE : (!next(e_2.d.out) | __expr60);
esac ;

DEFINE __expr80 := case
e_2.p.out : (__expr18 | next(e_1.b.out));
TRUE : (e_1.b.out | !next(e_1.b.out));
esac ;

DEFINE __expr90 := case
e_1.i.out : (next(e_1.i.out) | (__expr19 | e_1.j.out));
TRUE : (!next(e_1.i.out) | __expr89);
esac ;

DEFINE __expr41 := (e_3.k.out | !next(e_3.k.out)) ;

DEFINE __expr49 := (e_3.r.out | !next(e_3.r.out)) ;

DEFINE __expr81 := case
e_1.q.out : (next(e_1.q.out) | (__expr17 | !e_1.n.out));
TRUE : (!next(e_1.q.out) | (e_1.f.out & e_1.n.out));
esac ;

DEFINE __expr29 := case
(e_3.q.out | e_1.l.out) : (__expr25 | next(e_1.j.out));
TRUE : (e_1.j.out | !next(e_1.j.out));
esac ;

DEFINE __expr86 := (e_1.b.out & __expr24) ;

DEFINE __expr73 := case
e_2.u.req : (next(e_2.u.req) | e_2.r.out);
TRUE : (!next(e_2.u.req) | __expr14);
esac ;

DEFINE __expr44 := case
e_3.n.out : (next(e_3.n.out) | (e_3.e.out | e_3.m.out));
TRUE : (!next(e_3.n.out) | __expr43);
esac ;

DEFINE __expr52 := case
e_3.k.out : case
e_3.l.out : (next(e_3.l.out) | __expr31);
TRUE : (__expr51 | e_3.m.out);
esac;
TRUE : (e_3.l.out | __expr51);
esac ;

DEFINE __expr40 := case
(e_3.g.out <-> e_3.j.out) : case
e_3.h.out : (next(e_3.h.out) | __expr3);
TRUE : (!next(e_3.h.out) | e_3.g.out);
esac;
TRUE : (next(e_3.h.out) <-> e_3.h.out);
esac ;

DEFINE __expr0 := !e_3.f.out ;

DEFINE __expr1 := !e_3.h.out ;

DEFINE __expr11 := !e_2.g.out ;

DEFINE __expr43 := (__expr4 & __expr31) ;

DEFINE __expr8 := !e_2.f.out ;

DEFINE __expr88 := case
(e_1.d.out | e_1.c.out) : (__expr20 | next(e_1.g.out));
TRUE : (e_1.g.out | !next(e_1.g.out));
esac ;

DEFINE __expr37 := (e_3.h.out & __expr6) ;

DEFINE __expr10 := !e_2.h.out ;

DEFINE __expr79 := case
e_2.l.out : (__expr15 | next(e_2.j.out));
e_2.j.out : (next(e_2.j.out) | __expr16);
TRUE : (!next(e_2.j.out) | e_1.q.out);
esac ;

DEFINE __expr69 := (__expr12 & __expr13) ;

DEFINE __expr51 := !next(e_3.l.out) ;

DEFINE __expr63 := (e_2.h.out & __expr15) ;

DEFINE __expr98 := case
e_1.n.out : case
e_1.k.out : (__expr22 | next(e_1.p.out));
TRUE : __expr97;
esac;
TRUE : __expr97;
esac ;

DEFINE __expr59 := case
(e_2.f.out | e_2.n.out) : (e_2.m.out | !next(e_2.m.out));
TRUE : (__expr13 | next(e_2.m.out));
esac ;

DEFINE __expr33 := (e_3.b.out & __expr5) ;

DEFINE __expr94 := case
e_1.h.out : __expr93;
e_1.g.out : (!e_1.k.out | next(e_1.k.out));
TRUE : __expr93;
esac ;

DEFINE __expr20 := !e_1.g.out ;

DEFINE __expr57 := case
e_2.q.out : __expr56;
e_2.a.out : (!e_2.c.out | next(e_2.c.out));
TRUE : __expr56;
esac ;

DEFINE __expr100 := case
e_1.u.req : (!e_1.a.out | next(e_1.a.out));
TRUE : (e_1.a.out | !next(e_1.a.out));
esac ;

DEFINE __expr89 := (e_1.h.out & __expr25) ;

DEFINE __expr65 := case
(e_2.c.out <-> e_2.i.out) : case
e_2.c.out : (__expr12 | next(e_2.e.out));
TRUE : (e_2.e.out | !next(e_2.e.out));
esac;
TRUE : (next(e_2.e.out) <-> e_2.e.out);
esac ;

DEFINE __expr24 := !e_1.r.out ;

DEFINE __expr50 := case
e_3.e.out : case
e_3.m.out : (__expr5 | next(e_3.r.out));
TRUE : __expr49;
esac;
TRUE : __expr49;
esac ;

DEFINE __expr21 := !e_1.e.out ;

DEFINE __expr7 := !e_2.q.out ;

DEFINE __expr87 := case
e_1.d.out : (next(e_1.d.out) | (__expr18 | e_1.r.out));
TRUE : (!next(e_1.d.out) | __expr86);
esac ;

DEFINE __expr35 := case
(e_3.d.out | e_3.c.out) : (__expr3 | next(e_3.g.out));
TRUE : (e_3.g.out | !next(e_3.g.out));
esac ;

DEFINE __expr27 := (e_3.c.out | !next(e_3.c.out)) ;

DEFINE __expr45 := (e_3.p.out | !next(e_3.p.out)) ;

DEFINE __expr67 := (e_2.k.out | !next(e_2.k.out)) ;

DEFINE __expr75 := (e_2.r.out | !next(e_2.r.out)) ;

DEFINE __expr99 := case
e_1.u.req : (next(e_1.u.req) | e_1.r.out);
TRUE : (!next(e_1.u.req) | __expr24);
esac ;

DEFINE __expr26 := case
e_3.q.out : (next(e_3.q.out) | (__expr0 | __expr2));
TRUE : (!next(e_3.q.out) | (e_3.f.out & e_3.n.out));
esac ;

DEFINE __expr70 := case
e_2.n.out : (next(e_2.n.out) | (e_2.e.out | e_2.m.out));
TRUE : (!next(e_2.n.out) | __expr69);
esac ;

DEFINE __expr58 := case
(e_2.d.out <-> e_2.i.out) : case
e_2.f.out : (next(e_2.f.out) | !e_2.d.out);
TRUE : (!next(e_2.f.out) | e_2.d.out);
esac;
TRUE : (next(e_2.f.out) <-> e_2.f.out);
esac ;

DEFINE __expr78 := case
e_2.k.out : case
e_2.l.out : (next(e_2.l.out) | __expr13);
TRUE : (__expr77 | e_2.m.out);
esac;
TRUE : (e_2.l.out | __expr77);
esac ;

DEFINE __expr38 := case
e_3.i.out : (next(e_3.i.out) | (__expr1 | e_3.j.out));
TRUE : (!next(e_3.i.out) | __expr37);
esac ;

DEFINE __expr66 := case
(e_2.g.out <-> e_2.j.out) : case
e_2.h.out : (next(e_2.h.out) | __expr11);
TRUE : (!next(e_2.h.out) | e_2.g.out);
esac;
TRUE : (next(e_2.h.out) <-> e_2.h.out);
esac ;

DEFINE __expr2 := !e_3.n.out ;

DEFINE __expr16 := !e_1.q.out ;

