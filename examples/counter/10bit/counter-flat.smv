-- Flattened Boolean FSM model  generated from counter.smv
-- Dumped cwd->layers are: model model_bool determ determ_bool __TempLayer_0 

MODULE main
-- Input variables from layer 'model'
-- Input variables from layer 'model_bool'
-- Input variables from layer 'determ'
-- Input variables from layer 'determ_bool'
-- Input variables from layer '__TempLayer_0'
-- State variables from layer 'model'
VAR
bit1.value : boolean;
bit2.value : boolean;
bit3.value : boolean;
bit4.value : boolean;
bit5.value : boolean;
bit6.value : boolean;
bit7.value : boolean;
bit8.value : boolean;
bit9.value : boolean;
bit10.value : boolean;

-- State variables from layer 'model_bool'
-- State variables from layer 'determ'
-- State variables from layer 'determ_bool'
-- State variables from layer '__TempLayer_0'
-- Frozen variables from layer 'model'
-- Frozen variables from layer 'model_bool'
-- Frozen variables from layer 'determ'
-- Frozen variables from layer 'determ_bool'
-- Frozen variables from layer '__TempLayer_0'
INIT
 __expr0

INIT
 __expr1

INIT
 __expr2

INIT
 __expr3

INIT
 __expr4

INIT
 __expr5

INIT
 __expr6

INIT
 __expr7

INIT
 __expr8

INIT
 __expr9



TRANS
 __expr10

TRANS
 __expr11

TRANS
 __expr13

TRANS
 __expr15

TRANS
 __expr17

TRANS
 __expr19

TRANS
 __expr21

TRANS
 __expr23

TRANS
 __expr25

TRANS
 __expr27

TRANS
 __expr10

TRANS
 __expr11

TRANS
 __expr13

TRANS
 __expr15

TRANS
 __expr17

TRANS
 __expr19

TRANS
 __expr21

TRANS
 __expr23

TRANS
 __expr25

TRANS
 __expr27



LTLSPEC
 G !(((((((((bit1.value & bit2.value) & bit3.value) & bit4.value) & bit5.value) & bit6.value) & bit7.value) & bit8.value) & bit9.value) & bit10.value)

-- Symbols introduced by the dumper:
DEFINE __expr25 := (next(bit9.value) <-> ((bit9.value | __expr24) & (__expr8 | !__expr24))) ;

DEFINE __expr1 := !bit2.value ;

DEFINE __expr7 := !bit8.value ;

DEFINE __expr27 := (next(bit10.value) <-> ((bit10.value | __expr26) & (__expr9 | !__expr26))) ;

DEFINE __expr0 := !bit1.value ;

DEFINE __expr6 := !bit7.value ;

DEFINE __expr12 := (bit2.value & bit1.value) ;

DEFINE __expr14 := (bit3.value & __expr12) ;

DEFINE __expr16 := (bit4.value & __expr14) ;

DEFINE __expr18 := (bit5.value & __expr16) ;

DEFINE __expr5 := !bit6.value ;

DEFINE __expr20 := (bit6.value & __expr18) ;

DEFINE __expr22 := (bit7.value & __expr20) ;

DEFINE __expr24 := (bit8.value & __expr22) ;

DEFINE __expr26 := (bit9.value & __expr24) ;

DEFINE __expr4 := !bit5.value ;

DEFINE __expr10 := (next(bit1.value) <-> __expr0) ;

DEFINE __expr3 := !bit4.value ;

DEFINE __expr9 := !bit10.value ;

DEFINE __expr11 := (next(bit2.value) <-> ((bit2.value | bit1.value) & (__expr1 | __expr0))) ;

DEFINE __expr13 := (next(bit3.value) <-> ((bit3.value | __expr12) & (__expr2 | !__expr12))) ;

DEFINE __expr15 := (next(bit4.value) <-> ((bit4.value | __expr14) & (__expr3 | !__expr14))) ;

DEFINE __expr17 := (next(bit5.value) <-> ((bit5.value | __expr16) & (__expr4 | !__expr16))) ;

DEFINE __expr2 := !bit3.value ;

DEFINE __expr8 := !bit9.value ;

DEFINE __expr19 := (next(bit6.value) <-> ((bit6.value | __expr18) & (__expr5 | !__expr18))) ;

DEFINE __expr21 := (next(bit7.value) <-> ((bit7.value | __expr20) & (__expr6 | !__expr20))) ;

DEFINE __expr23 := (next(bit8.value) <-> ((bit8.value | __expr22) & (__expr7 | !__expr22))) ;

