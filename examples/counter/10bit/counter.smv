MODULE main
VAR
	bit1 : counter_cell(TRUE);
	bit2 : counter_cell(bit1.carry_out);
	bit3 : counter_cell(bit2.carry_out);
	bit4 : counter_cell(bit3.carry_out);
SPEC
	AG !(bit1.value & bit2.value & bit3.value & bit4.value)
MODULE counter_cell(carry_in)
VAR
  value : boolean;
ASSIGN
  init(value) := FALSE;
  next(value) := (value | carry_in) & (!value | !carry_in);
DEFINE
  carry_out := value & carry_in;

